<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2024 Authors, Flipkart Internet Pvt. Ltd.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.appform.ranger</groupId>
    <artifactId>ranger</artifactId>
    <packaging>pom</packaging>
    <version>2.0.0-SNAPSHOT</version>
    <name>Ranger Service Discovery</name>
    <url>https://github.com/appform-io/ranger</url>
    <description>Service Discovery for Java</description>
    <inceptionYear>2015</inceptionYear>

    <modules>
        <module>ranger-core</module>
        <module>ranger-zookeeper</module>
        <module>ranger-http</module>
        <module>ranger-drove</module>
        <module>ranger-client</module>
        <module>ranger-zk-client</module>
        <module>ranger-id</module>
        <module>ranger-http-client</module>
        <module>ranger-drove-client</module>
        <module>ranger-server-common</module>
        <module>ranger-server-bundle</module>
        <module>ranger-server-bundle-dw5</module>
        <module>ranger-http-model</module>
        <module>ranger-discovery-common</module>
        <module>ranger-discovery-bundle</module>
        <module>ranger-discovery-bundle-dw5</module>
        <module>ranger-hub-server-bundle</module>
        <module>ranger-hub-server-bundle-dw5</module>
        <module>ranger-server</module>
        <module>ranger-server-dw5</module>
        <module>ranger-bom</module>
    </modules>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://ossrh-staging-api.central.sonatype.com</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://ossrh-staging-api.central.sonatype.com</url>
        </repository>
    </distributionManagement>

    <scm>
        <connection>scm:git:https://github.com/appform-io/ranger.git</connection>
        <developerConnection>scm:git:https://github.com/appform-io/ranger.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/appform-io/ranger</url>
    </scm>

    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/appform-io/ranger/issues</url>
    </issueManagement>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>santanusinha</id>
            <name>Santanu Sinha</name>
            <email>santanu.sinha@gmail.com</email>
        </developer>
        <developer>
            <id>Tushar-Naik</id>
            <name>Tushar Naik</name>
            <email>tushar.naik@flipkart.com</email>
        </developer>
        <developer>
            <id>koushikr</id>
            <name>Koushik Ramachandra</name>
            <email>rkoushik.14@gmail.com</email>
        </developer>
    </developers>

    <properties>
        <!-- General -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>17</java.version>
        <java.release.version>17</java.release.version>

        <!-- Global -->
        <guava.version>33.5.0-jre</guava.version>
        <curator.version>5.9.0</curator.version>
        <slf4j.version>1.7.32</slf4j.version>
        <lombok.version>1.18.42</lombok.version>
        <annotations.version>3.0.1</annotations.version>
        <guava-retrying.version>2.0.0</guava-retrying.version>
        <http.client.version>5.1.0</http.client.version>
        <logback.version>1.5.18</logback.version>
        <metrics.version>4.2.0</metrics.version>
        <jackson.version>2.20</jackson.version>
        <snappy.version>1.1.10.8</snappy.version>
        <zookeeper.version>3.9.4</zookeeper.version>

        <!-- Test Dependencies -->
        <junit.version>5.13.4</junit.version>
        <awaitility.version>4.3.0</awaitility.version>
        <wiremock.version>4.0.0-beta.15</wiremock.version>
        <mockito.version>4.2.0</mockito.version>
        <json-smart.version>2.6.0</json-smart.version>

        <!-- Maven Plugins -->
        <maven.compiler.version>3.14.0</maven.compiler.version>
        <maven.jar.plugin.version>3.4.2</maven.jar.plugin.version>
        <jacoco.version>0.8.13</jacoco.version>
        <maven.gpg.plugin.version>3.2.8</maven.gpg.plugin.version>
        <nexus.staging.maven.plugin.version>1.7.0</nexus.staging.maven.plugin.version>
        <maven.javadoc.plugin.version>3.12.0</maven.javadoc.plugin.version>
        <maven.source.plugin.version>3.3.1</maven.source.plugin.version>
        <maven.surefire.plugin.version>3.5.4</maven.surefire.plugin.version>
        <maven.surefire.junit5.tree.reporter.version>1.4.0</maven.surefire.junit5.tree.reporter.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>${snappy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>net.minidev</groupId>
                <artifactId>json-smart</artifactId>
                <version>${json-smart.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
            <version>${annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.rholder</groupId>
            <artifactId>guava-retrying</artifactId>
            <version>${guava-retrying.version}</version>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <release>${java.release.version}</release>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>me.fabriciorby</groupId>
                        <artifactId>maven-surefire-junit5-tree-reporter</artifactId>
                        <version>${maven.surefire.junit5.tree.reporter.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <reportFormat>plain</reportFormat>
                    <consoleOutputReporter>
                        <disable>true</disable>
                    </consoleOutputReporter>
                    <statelessTestsetInfoReporter
                            implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporter">
                        <printStacktraceOnError>true</printStacktraceOnError>
                        <printStacktraceOnFailure>true</printStacktraceOnFailure>
                        <printStdoutOnError>true</printStdoutOnError>
                        <printStdoutOnFailure>true</printStdoutOnFailure>
                        <printStdoutOnSuccess>false</printStdoutOnSuccess>
                        <printStderrOnError>true</printStderrOnError>
                        <printStderrOnFailure>true</printStderrOnFailure>
                        <printStderrOnSuccess>false</printStderrOnSuccess>
                    </statelessTestsetInfoReporter>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin.version}</version>
                <configuration>
                    <doclint>all,-missing</doclint>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>${nexus.staging.maven.plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://ossrh-staging-api.central.sonatype.com</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                    <stagingProgressTimeoutMinutes>10</stagingProgressTimeoutMinutes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>release</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven.gpg.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <useAgent>true</useAgent>
                                    <executable>gpg2</executable>
                                    <!-- Run something like 'gpg2 -ab out' to cache the creds
                                     on agent before running if needed -->
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- The following are required for dns cache manipulator.
        Ref: https://github.com/alibaba/java-dns-cache-manipulator#jvm-settings-for-java-16 -->
        <profile>
            <id>add-java-open-options-for-jdk16+</id>
            <activation>
                <jdk>[16,)</jdk>
            </activation>
            <properties>
                <argLine>
                    --add-opens java.base/java.net=ALL-UNNAMED
                    --add-opens java.base/sun.net=ALL-UNNAMED
                </argLine>
            </properties>
        </profile>
    </profiles>
</project>
